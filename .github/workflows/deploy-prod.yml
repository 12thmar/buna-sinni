name: Deploy frontend to S3 + CloudFront

on:
  push:
    branches: [ "prod" ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-prod
      cancel-in-progress: true
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps (incl dev)
        run: npm ci --include=dev

      - name: Install & Build
        env:
          # Ensure vite.config.js has: base: "/"
          VITE_CANON_HOST: ""  # leave blank unless you intentionally canonicalize to bunaroots.com
        run: |
          npm ci
          npm run build
          # Sanity: ensure hashed bundle referenced by index.html exists
          JS_FILE=$(grep -o 'assets/index-[^"]*\.js' dist/index.html | head -n1)
          CSS_FILE=$(grep -o 'assets/index-[^"]*\.css' dist/index.html | head -n1)
          test -f "dist/$JS_FILE" || (echo "Missing $JS_FILE" && exit 1)
          test -f "dist/$CSS_FILE" || (echo "Missing $CSS_FILE" && exit 1)
          echo "JS_FILE=$JS_FILE" >> $GITHUB_ENV
          echo "CSS_FILE=$CSS_FILE" >> $GITHUB_ENV

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Sync build â†’ S3
        run: |
          aws s3 sync dist/ s3://${{ secrets.AWS_S3_BUCKET }}/ --delete

      - name: Fix MIME types + cache headers
        shell: bash
        run: |
          # Immutable assets
          aws s3 cp s3://${{ secrets.AWS_S3_BUCKET }}/assets/ s3://${{ secrets.AWS_S3_BUCKET }}/assets/ \
            --recursive --metadata-directive REPLACE \
            --cache-control "public,max-age=31536000,immutable"
          
          # Per-extension content-types
          declare -A MAP=(
            ["js"]="application/javascript"
            ["css"]="text/css"
            ["svg"]="image/svg+xml"
            ["png"]="image/png"
            ["jpg"]="image/jpeg"
            ["jpeg"]="image/jpeg"
            ["webp"]="image/webp"
            ["avif"]="image/avif"
            ["woff2"]="font/woff2"
          )
          for ext in "${!MAP[@]}"; do
            aws s3 cp s3://${{ secrets.AWS_S3_BUCKET }}/assets/ s3://${{ secrets.AWS_S3_BUCKET }}/assets/ \
              --recursive --exclude "*" --include "*.${ext}" \
              --metadata-directive REPLACE \
              --content-type "${MAP[$ext]}" \
              --cache-control "public,max-age=31536000,immutable"
          done
          
          # HTML should be no-cache so new builds take effect
          aws s3 cp s3://${{ secrets.AWS_S3_BUCKET }}/index.html s3://${{ secrets.AWS_S3_BUCKET }}/index.html \
            --metadata-directive REPLACE \
            --content-type "text/html" \
            --cache-control "no-cache"

      - name: Verify bundle Content-Type
        run: |
          aws s3api head-object --bucket "${{ secrets.AWS_S3_BUCKET }}" --key "$JS_FILE" \
            --query '{Key:Key,CT:ContentType,Cache:CacheControl}' || true
          aws s3api head-object --bucket "${{ secrets.AWS_S3_BUCKET }}" --key "$CSS_FILE" \
            --query '{Key:Key,CT:ContentType,Cache:CacheControl}' || true


      - name: Invalidate CloudFront
        env:
          DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "$DISTRIBUTION_ID" \
            --paths "/*"

